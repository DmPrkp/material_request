# DOCKER DEV FILE
# docker compose -f compose.dev.yaml -p matli-dev watch
# docker compose -f compose.dev.yaml -p matli-dev build --no-cache

networks:
  matli_network:
    name: matli_network

services:
  calc-server:
    build:
      context: ./calc-server
      dockerfile: ./docker/Dockerfile.dev
    ports:
      - 4000:4000
    env_file:
      - ./secrets/calc-db/.db.env
    develop:
      watch:
        - action: sync
          path: ./calc-server/src
          target: /usr/calc-server/src
          ignore:
            - node_modules/
            - dist/
        - action: rebuild
          path: ./calc-server/package.json
        - action: rebuild
          path: ./calc-server/tsconfig.json
        - action: rebuild
          path: ./calc-server/nest-cli.json
        - action: rebuild
          path: ./calc-server/docker
    depends_on:
      - db

  order-server:
    build:
      context: ./order-server
      dockerfile: ./docker/Dockerfile.dev
    ports:
      - 4100:4100
    env_file:
      - ./secrets/order-db/.db.env
    develop:
      watch:
        - action: sync
          path: ./order-server/src
          target: /usr/order-server/src
          ignore:
            - node_modules/
            - dist/
        - action: rebuild
          path: ./order-server/package.json
        - action: rebuild
          path: ./order-server/tsconfig.json
        - action: rebuild
          path: ./order-server/nest-cli.json
        - action: rebuild
          path: ./order-server/docker
    depends_on:
      - db

  ionic-client:
    build:
      context: ./ionic-client
      dockerfile: ./docker/Dockerfile.dev
    ports:
      - 5173:5173
    develop:
      watch:
        - action: sync
          path: ./ionic-client
          target: /usr/app
          ignore:
            - node_modules/
    depends_on:
      - db

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - ionic-client
      - calc-server
      - order-server
      - db

  db:
    image: postgres
    restart: always
    user: postgres
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=calc

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - db
