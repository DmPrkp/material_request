# DOCKER DEV FILE
# docker compose -f compose.dev.yaml -p matli-dev watch
# docker compose -f compose.dev.yaml -p matli-dev build --no-cache

networks:
  matli_network:
    name: matli_network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
          gateway: 172.16.238.3

services:
  web-server:
    build:
      context: ./web-server
      dockerfile: ./docker/Dockerfile.dev
    ports:
      - 4000:4000
    env_file:
      - ./secrets/calc-db/.db.env
    develop:
      watch:
        - action: sync
          path: ./web-server/src
          target: /usr/web-server/src
          ignore:
            - node_modules/
            - dist/
        - action: rebuild
          path: ./web-server/package.json
        - action: rebuild
          path: ./web-server/tsconfig.json
        - action: rebuild
          path: ./web-server/nest-cli.json
        - action: rebuild
          path: ./web-server/docker

    depends_on:
      - db

  ionic-client:
    build:
      context: ./ionic-client
      dockerfile: ./docker_files/Dockerfile.dev
    ports:
      - 5173:5173
    develop:
      watch:
        - action: sync
          path: ./ionic-client
          target: /usr/app
          ignore:
            - node_modules/
    depends_on:
      - db

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - ionic-client
      - web-server
      - db
    #   - calc-server

  db:
    image: postgres
    restart: always
    user: postgres
    volumes:
      - ./secrets/calc-db/db-password.txt:/run/secrets/db-password
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
      - POSTGRES_DB=calc

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - db
# mqtt:
#   image: eclipse-mosquitto:latest
#   restart: always
#   ports:
#     - '1883:1883'
# db:
#   image: postgres
#   restart: always
#   user: postgres
#   secrets:
#     - db-password
#   volumes:
#     - db-data:/var/lib/postgresql/data
#   environment:
#     - POSTGRES_DB=example
#     - POSTGRES_PASSWORD_FILE=./db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

