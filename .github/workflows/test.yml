name: Run Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test-order-server:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: order
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: order-server/package-lock.json

      - name: Install dependencies
        working-directory: ./order-server
        run: npm ci

      - name: Generate Prisma client
        working-directory: ./order-server
        run: npx prisma generate

      - name: Run database migrations
        working-directory: ./order-server
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/order

      - name: Run unit tests
        working-directory: ./order-server
        run: npm run test
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/order

      - name: Run e2e tests
        working-directory: ./order-server
        run: npm run test:e2e
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/order

  test-ionic-client:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: ionic-client/package.json

      - name: Remove package-lock.json
        working-directory: ./ionic-client
        run: rm package-lock.json

      - name: Install dependencies
        working-directory: ./ionic-client
        run: npm i

      - name: Run unit tests
        working-directory: ./ionic-client
        run: npm run test:unit

      # - name: Run e2e tests
      #   working-directory: ./ionic-client
      #   run: npm run test:e2e

  lint-and-format:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: |
            order-server/package-lock.json
            ionic-client/package-lock.json

      - name: Install order-server dependencies
        working-directory: ./order-server
        run: npm ci

      - name: Install ionic-client dependencies
        working-directory: ./ionic-client
        run: npm ci

      - name: Lint order-server
        working-directory: ./order-server
        run: npm run lint

      - name: Lint ionic-client
        working-directory: ./ionic-client
        run: npm run lint

  build-services:
    runs-on: ubuntu-latest
    needs: [test-order-server, test-ionic-client, lint-and-format]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: |
            order-server/package-lock.json
            ionic-client/package-lock.json

      - name: Install order-server dependencies
        working-directory: ./order-server
        run: npm ci

      - name: Install ionic-client dependencies
        working-directory: ./ionic-client
        run: npm ci

      - name: Build order-server
        working-directory: ./order-server
        run: npm run build

      - name: Build ionic-client
        working-directory: ./ionic-client
        run: npm run build
